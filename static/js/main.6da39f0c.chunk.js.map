{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","currentTodo","setCurrentTodo","handleCurrentTodo","useCallback","todo","className","map","id","completed","cn","title","type","onClick","TodoFilter","statusFilter","setStatusFilter","titleFilter","setTitleFilter","titleFilterHandler","event","target","value","statusFilterHandler","resetTitleFilter","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","newUser","href","email","name","App","todosFromServer","setTodosFromServer","todoTitleFilter","setTodoTitleFilter","todoStatusFilter","setTodoStatusFilter","allTodos","visibleTodos","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6da39f0c.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React, { useCallback } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  currentTodo: Todo | null,\n  setCurrentTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  currentTodo,\n  setCurrentTodo,\n}) => {\n  const handleCurrentTodo = useCallback((todo: Todo) => {\n    setCurrentTodo(todo);\n  }, [currentTodo]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                // className=\"has-text-success\"\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  handleCurrentTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn(\n                      'far',\n                      {\n                        'fa-eye': !currentTodo || currentTodo.id !== todo.id,\n                        'fa-eye-slash': currentTodo\n                          && currentTodo.id === todo.id,\n                      },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n\n      {/* <tbody>\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      </tbody> */}\n    </table>\n  );\n};\n","import { useCallback } from 'react';\n\ntype Props = {\n  statusFilter: string,\n  setStatusFilter: (status: string) => void;\n  titleFilter: string,\n  setTitleFilter: (title: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  statusFilter,\n  setStatusFilter,\n  titleFilter,\n  setTitleFilter,\n}) => {\n  const titleFilterHandler = useCallback((event) => {\n    setTitleFilter(event.target.value);\n  }, [titleFilter]);\n\n  const statusFilterHandler = useCallback((event) => {\n    setStatusFilter(event.target.value);\n  }, [statusFilter]);\n\n  const resetTitleFilter = useCallback(() => {\n    setTitleFilter('');\n  }, [titleFilter]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={statusFilter}\n            onChange={statusFilterHandler}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={titleFilter}\n          onChange={titleFilterHandler}\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {titleFilter && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetTitleFilter}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  setCurrentTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setCurrentTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(todo.userId).then((newUser) => {\n      setUser(newUser);\n    }).then(() => {\n      setIsLoading(false);\n    });\n  });\n\n  const handleCurrentTodo = useCallback(() => {\n    setCurrentTodo(null);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCurrentTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              {user && (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [todoTitleFilter, setTodoTitleFilter] = useState('');\n  const [todoStatusFilter, setTodoStatusFilter] = useState('all');\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then((allTodos) => {\n      setTodosFromServer(allTodos);\n    }).then(() => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  const visibleTodos = todosFromServer.filter((todo) => {\n    switch (todoStatusFilter) {\n      case 'all':\n        return todo.title.toLowerCase()\n          .includes(todoTitleFilter.toLowerCase());\n      case 'active':\n        return !todo.completed\n          && todo.title.toLowerCase()\n            .includes(todoTitleFilter.toLowerCase());\n      case 'completed':\n        return todo.completed\n          && todo.title.toLowerCase()\n            .includes(todoTitleFilter.toLowerCase());\n      default:\n        return todo;\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                statusFilter={todoStatusFilter}\n                setStatusFilter={setTodoStatusFilter}\n                titleFilter={todoTitleFilter}\n                setTitleFilter={setTodoTitleFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    currentTodo={currentTodo}\n                    setCurrentTodo={setCurrentTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTodo && (\n        <TodoModal\n          todo={currentTodo}\n          setCurrentTodo={setCurrentTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}